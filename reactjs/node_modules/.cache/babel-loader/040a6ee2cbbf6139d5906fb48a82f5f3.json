{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport axios from 'axios';\nimport { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nexport default function AuthUser() {\n  _s();\n\n  const navigate = useNavigate();\n\n  const getToken = () => {\n    const tokenString = sessionStorage.getItem('token');\n    const userToken = JSON.parse(tokenString);\n    return userToken;\n  };\n\n  const getUser = () => {\n    const userString = sessionStorage.getItem('user');\n    const user_detail = JSON.parse(userString);\n    return user_detail;\n  };\n\n  const [token, setToken] = useState(getToken());\n  const [user, setUser] = useState(getUser());\n  const [users, setUsers] = useState([]);\n  const [wpisy, setPosts] = useState([]);\n\n  const saveToken = (user, token) => {\n    sessionStorage.setItem('token', JSON.stringify(token));\n    sessionStorage.setItem('user', JSON.stringify(user));\n    setToken(token);\n    setUser(user);\n    navigate('/');\n  };\n\n  const logout = () => {\n    sessionStorage.clear();\n    navigate('/login');\n  };\n\n  const http = axios.create({\n    baseURL: \"http://localhost:8000/api\",\n    headers: {\n      \"Content-type\": \"application/json\",\n      \"Authorization\": `Bearer ${token}`\n    }\n  });\n\n  const fetchUsers = async () => {\n    try {\n      const response = await http.get('/users');\n      setUsers(response.data);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const fetchPosts = async () => {\n    try {\n      const response = await http.get('/wpisy');\n      setPosts(response.data);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  useEffect(() => {\n    fetchUsers();\n    fetchPosts();\n  }, []);\n  return {\n    setToken: saveToken,\n    token,\n    user,\n    getToken,\n    getUser,\n    http,\n    logout,\n    users,\n    wpisy,\n    fetchUsers,\n    fetchPosts\n  };\n}\n\n_s(AuthUser, \"Cfak+3ae3jHxciVGB7jvDWORKVY=\", false, function () {\n  return [useNavigate];\n});\n\n_c = AuthUser;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthUser\");","map":{"version":3,"sources":["C:/Users/Artur/OneDrive/Pulpit/Szkielety/laravelprojekt/reactjs/src/components/AuthUser.js"],"names":["axios","useState","useEffect","useNavigate","AuthUser","navigate","getToken","tokenString","sessionStorage","getItem","userToken","JSON","parse","getUser","userString","user_detail","token","setToken","user","setUser","users","setUsers","wpisy","setPosts","saveToken","setItem","stringify","logout","clear","http","create","baseURL","headers","fetchUsers","response","get","data","error","console","fetchPosts"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\n\nexport default function AuthUser() {\n  const navigate = useNavigate();\n\n  const getToken = () => {\n    const tokenString = sessionStorage.getItem('token');\n    const userToken = JSON.parse(tokenString);\n    return userToken;\n  };\n\n  const getUser = () => {\n    const userString = sessionStorage.getItem('user');\n    const user_detail = JSON.parse(userString);\n    return user_detail;\n  };\n\n  const [token, setToken] = useState(getToken());\n  const [user, setUser] = useState(getUser());\n  const [users, setUsers] = useState([]);\n  const [wpisy, setPosts] = useState([]);\n\n  const saveToken = (user, token) => {\n    sessionStorage.setItem('token', JSON.stringify(token));\n    sessionStorage.setItem('user', JSON.stringify(user));\n\n    setToken(token);\n    setUser(user);\n    navigate('/');\n  };\n\n  const logout = () => {\n    sessionStorage.clear();\n    navigate('/login');\n  };\n\n  const http = axios.create({\n    baseURL: \"http://localhost:8000/api\",\n    headers: {\n      \"Content-type\": \"application/json\",\n      \"Authorization\": `Bearer ${token}`\n    }\n  });\n\n  const fetchUsers = async () => {\n    try {\n      const response = await http.get('/users');\n      setUsers(response.data);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const fetchPosts = async () => {\n    try {\n      const response = await http.get('/wpisy');\n      setPosts(response.data);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  useEffect(() => {\n    fetchUsers();\n    fetchPosts();\n  }, []);\n\n  return {\n    setToken: saveToken,\n    token,\n    user,\n    getToken,\n    getUser,\n    http,\n    logout,\n    users,\n    wpisy,\n    fetchUsers,\n    fetchPosts,\n  };\n}\n"]},"metadata":{},"sourceType":"module"}