{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport axios from 'axios';\nimport { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nexport default function AuthUser() {\n  _s();\n\n  const navigate = useNavigate();\n\n  const getToken = () => {\n    const tokenString = sessionStorage.getItem('token');\n    const userToken = JSON.parse(tokenString);\n    return userToken;\n  };\n\n  const getUser = () => {\n    const userString = sessionStorage.getItem('user');\n    const user_detail = JSON.parse(userString);\n    return user_detail;\n  };\n\n  const getPost = () => {\n    const postString = sessionStorage.getItem('wpis');\n    const post_detail = JSON.parse(postString);\n    return post_detail;\n  };\n\n  const [token, setToken] = useState(getToken());\n  const [user, setUser] = useState(getUser());\n  const [users, setUsers] = useState([]);\n\n  const saveToken = (user, token) => {\n    sessionStorage.setItem('token', JSON.stringify(token));\n    sessionStorage.setItem('user', JSON.stringify(user));\n    setToken(token);\n    setUser(user);\n    navigate('/dashboard');\n  };\n\n  const logout = () => {\n    sessionStorage.clear();\n    navigate('/login');\n  };\n\n  const http = axios.create({\n    baseURL: \"http://localhost:8000/api\",\n    headers: {\n      \"Content-type\": \"application/json\",\n      \"Authorization\": `Bearer ${token}`\n    }\n  });\n\n  const fetchUsers = async () => {\n    try {\n      const response = await http.get('/users');\n      setUsers(response.data);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const fetchPosts = async () => {\n    try {\n      const response = await http.get('/wpisy');\n      setPosts(response.data);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  return {\n    setToken: saveToken,\n    token,\n    user,\n    getToken,\n    http,\n    logout,\n    users,\n    fetchUsers\n  };\n}\n\n_s(AuthUser, \"0p6jFJrpmYOWSAutM32RFSTcByw=\", false, function () {\n  return [useNavigate];\n});\n\n_c = AuthUser;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthUser\");","map":{"version":3,"sources":["G:/Studia/SzkieletyProjekt/laravelprojekt/reactjs/src/components/AuthUser.js"],"names":["axios","useState","useNavigate","AuthUser","navigate","getToken","tokenString","sessionStorage","getItem","userToken","JSON","parse","getUser","userString","user_detail","getPost","postString","post_detail","token","setToken","user","setUser","users","setUsers","saveToken","setItem","stringify","logout","clear","http","create","baseURL","headers","fetchUsers","response","get","data","error","console","fetchPosts","setPosts"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\n\nexport default function AuthUser(){\n    const navigate = useNavigate();\n\n    const getToken = () =>{\n        const tokenString = sessionStorage.getItem('token');\n        const userToken = JSON.parse(tokenString);\n        return userToken;\n    }\n\n    const getUser = () =>{\n        const userString = sessionStorage.getItem('user');\n        const user_detail = JSON.parse(userString);\n        return user_detail;\n    }\n\n    const getPost = () =>{\n        const postString = sessionStorage.getItem('wpis');\n        const post_detail = JSON.parse(postString);\n        return post_detail;\n    }\n\n    const [token,setToken] = useState(getToken());\n    const [user,setUser] = useState(getUser());\n    const [users, setUsers] = useState([]);\n\n    const saveToken = (user,token) =>{\n        sessionStorage.setItem('token',JSON.stringify(token));\n        sessionStorage.setItem('user',JSON.stringify(user));\n\n        setToken(token);\n        setUser(user);\n        navigate('/dashboard');\n    }\n\n    const logout = () => {\n        sessionStorage.clear();\n        navigate('/login');\n    }\n\n    const http = axios.create({\n        baseURL:\"http://localhost:8000/api\",\n        headers:{\n            \"Content-type\" : \"application/json\",\n            \"Authorization\" : `Bearer ${token}`\n        }\n    });\n\n    const fetchUsers = async () => {\n        try {\n          const response = await http.get('/users');\n          setUsers(response.data);\n        } catch (error) {\n          console.error(error);\n        }\n      };\n\n      const fetchPosts = async () => {\n        try {\n          const response = await http.get('/wpisy');\n          setPosts(response.data);\n        } catch (error) {\n          console.error(error);\n        }\n      };\n\n    return {\n        setToken:saveToken,\n        token,\n        user,\n        getToken,\n        http,\n        logout,\n        users,\n        fetchUsers\n    }\n}"]},"metadata":{},"sourceType":"module"}