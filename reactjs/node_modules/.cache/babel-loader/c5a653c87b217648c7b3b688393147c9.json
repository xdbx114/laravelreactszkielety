{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Artur\\\\OneDrive\\\\Pulpit\\\\Szkielety\\\\laravelprojekt\\\\reactjs\\\\src\\\\components\\\\editwpis.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport AuthUser from './AuthUser';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function EditWpis(_ref) {\n  _s();\n\n  let {\n    match\n  } = _ref;\n  const {\n    id\n  } = useParams();\n  const {\n    wpisy,\n    fetchPosts,\n    http,\n    user\n  } = AuthUser();\n  const [tytul, setTytul] = useState('');\n  const [wpis, setWpis] = useState({});\n  const [tresc, setTresc] = useState('');\n  const [userId, setUserId] = useState('');\n  useEffect(() => {\n    fetchPosts();\n  }, []);\n  useEffect(() => {\n    const selectedWpis = wpisy.find(item => item.id === parseInt(id));\n\n    if (selectedWpis) {\n      setWpis(selectedWpis);\n      setTresc(selectedWpis.tresc);\n      setUserId(selectedWpis.user_id);\n    }\n  }, [id, wpisy]);\n\n  const handleUpdate = async () => {\n    try {\n      const response = await http.put(`/wpisy/${id}`, {\n        tresc: tresc,\n        user_id: userId\n      });\n      console.log('Wpis został zaktualizowany:', response.data); // Przekieruj użytkownika z powrotem do dashboard lub innej strony\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Edytuj wpis\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"tresc\",\n        children: \"Tre\\u015B\\u0107:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        id: \"tresc\",\n        value: tresc,\n        onChange: e => setTresc(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"userId\",\n        children: \"ID u\\u017Cytkownika:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        id: \"userId\",\n        value: userId,\n        onChange: e => setUserId(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-primary\",\n      onClick: handleUpdate,\n      children: \"Zaktualizuj\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n\n_s(EditWpis, \"Nv311Cj/mhk/TVLEeQbIQbZUwng=\", false, function () {\n  return [useParams];\n});\n\n_c = EditWpis;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditWpis\");","map":{"version":3,"sources":["C:/Users/Artur/OneDrive/Pulpit/Szkielety/laravelprojekt/reactjs/src/components/editwpis.js"],"names":["React","useEffect","useState","useParams","AuthUser","EditWpis","match","id","wpisy","fetchPosts","http","user","tytul","setTytul","wpis","setWpis","tresc","setTresc","userId","setUserId","selectedWpis","find","item","parseInt","user_id","handleUpdate","response","put","console","log","data","error","e","target","value"],"mappings":"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","sourcesContent":["import React, { useEffect, useState} from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport AuthUser from './AuthUser';\r\n\r\nexport default function EditWpis({ match }) {\r\n    const { id } = useParams();\r\n  const { wpisy, fetchPosts, http, user } = AuthUser();\r\n\r\n  const [tytul, setTytul] = useState('');\r\n  const [wpis, setWpis] = useState({});\r\n  const [tresc, setTresc] = useState('');\r\n  const [userId, setUserId] = useState('');\r\n\r\n  useEffect(() => {\r\n    fetchPosts();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const selectedWpis = wpisy.find((item) => item.id === parseInt(id));\r\n    if (selectedWpis) {\r\n      setWpis(selectedWpis);\r\n      setTresc(selectedWpis.tresc);\r\n      setUserId(selectedWpis.user_id);\r\n    }\r\n  }, [id, wpisy]);\r\n  \r\n\r\n  const handleUpdate = async () => {\r\n    try {\r\n      const response = await http.put(`/wpisy/${id}`, {\r\n        tresc: tresc,\r\n        user_id: userId,\r\n      });\r\n      console.log('Wpis został zaktualizowany:', response.data);\r\n      // Przekieruj użytkownika z powrotem do dashboard lub innej strony\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Edytuj wpis</h1>\r\n      <div>\r\n        <label htmlFor=\"tresc\">Treść:</label>\r\n        <textarea\r\n          id=\"tresc\"\r\n          value={tresc}\r\n          onChange={(e) => setTresc(e.target.value)}\r\n        ></textarea>\r\n      </div>\r\n      <div>\r\n        <label htmlFor=\"userId\">ID użytkownika:</label>\r\n        <input\r\n          type=\"number\"\r\n          id=\"userId\"\r\n          value={userId}\r\n          onChange={(e) => setUserId(e.target.value)}\r\n        />\r\n      </div>\r\n      <button className=\"btn btn-primary\" onClick={handleUpdate}>\r\n        Zaktualizuj\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}