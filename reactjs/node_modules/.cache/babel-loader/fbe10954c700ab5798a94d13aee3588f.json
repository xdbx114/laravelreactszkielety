{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Artur\\\\OneDrive\\\\Pulpit\\\\Szkielety\\\\laravelprojekt\\\\reactjs\\\\src\\\\components\\\\register.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { useNavigate } from 'react-router-dom';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport AuthUser from './AuthUser';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Register() {\n  _s();\n\n  const navigate = useNavigate();\n  const {\n    http,\n    setToken\n  } = AuthUser();\n  const [error, setError] = useState('');\n  const validationSchema = Yup.object({\n    name: Yup.string().required('Pole Nazwa użytkownika jest wymagane'),\n    email: Yup.string().email('Nieprawidłowy adres email').required('Pole Adres email jest wymagane'),\n    password: Yup.string().required('Pole Hasło jest wymagane')\n  });\n\n  const handleSubmit = async (values, _ref) => {\n    let {\n      setSubmitting\n    } = _ref;\n\n    try {\n      const usernameResponse = await http.get(`/check-username?username=${values.name}`);\n\n      if (usernameResponse.data.exists) {\n        setError('Nazwa użytkownika jest już zajęta.');\n        return;\n      }\n\n      const registerResponse = await http.post('/register', values);\n      navigate('/login');\n    } catch (error) {\n      if (error.response && error.response.data && error.response.data.email) {\n        setError(error.response.data.email[0]);\n      } else {\n        setError('Wystąpił błąd rejestracji.');\n      }\n    } finally {\n      setSubmitting(false);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"row justify-content-center pt-5\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-sm-6\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card p-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-center mb-3\",\n          children: \"Zarejestruj si\\u0119\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"alert alert-danger\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Formik, {\n          initialValues: {\n            name: '',\n            email: '',\n            password: ''\n          },\n          validationSchema: validationSchema,\n          onSubmit: handleSubmit,\n          children: /*#__PURE__*/_jsxDEV(Form, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"name\",\n                children: \"Nazwa u\\u017Cytkownika:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 56,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Field, {\n                type: \"text\",\n                className: \"form-control\",\n                placeholder: \"Podaj nazw\\u0119 u\\u017Cytkownika\",\n                name: \"name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 57,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                name: \"name\",\n                component: \"div\",\n                className: \"text-danger\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group mt-3\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"email\",\n                children: \"Adres email:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 66,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Field, {\n                type: \"email\",\n                className: \"form-control\",\n                placeholder: \"Podaj email\",\n                name: \"email\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 67,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                name: \"email\",\n                component: \"div\",\n                className: \"text-danger\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group mt-3\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"password\",\n                children: \"Has\\u0142o:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Field, {\n                type: \"password\",\n                className: \"form-control\",\n                placeholder: \"Podaj has\\u0142o\",\n                name: \"password\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                name: \"password\",\n                component: \"div\",\n                className: \"text-danger\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              className: \"btn btn-primary mt-4\",\n              children: \"Zarejestruj si\\u0119\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Register, \"N8ll6e7vZU6NAN/34gAy4+Cjbmg=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Register;\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["C:/Users/Artur/OneDrive/Pulpit/Szkielety/laravelprojekt/reactjs/src/components/register.js"],"names":["useState","useNavigate","Formik","Form","Field","ErrorMessage","Yup","AuthUser","Register","navigate","http","setToken","error","setError","validationSchema","object","name","string","required","email","password","handleSubmit","values","setSubmitting","usernameResponse","get","data","exists","registerResponse","post","response"],"mappings":"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","sourcesContent":["import { useState } from \"react\";\nimport { useNavigate } from 'react-router-dom';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport AuthUser from './AuthUser';\n\nexport default function Register() {\n  const navigate = useNavigate();\n  const { http, setToken } = AuthUser();\n  const [error, setError] = useState('');\n\n  const validationSchema = Yup.object({\n    name: Yup.string().required('Pole Nazwa użytkownika jest wymagane'),\n    email: Yup.string().email('Nieprawidłowy adres email').required('Pole Adres email jest wymagane'),\n    password: Yup.string().required('Pole Hasło jest wymagane'),\n  });\n\n  const handleSubmit = async (values, { setSubmitting }) => {\n    try {\n      const usernameResponse = await http.get(`/check-username?username=${values.name}`);\n      if (usernameResponse.data.exists) {\n        setError('Nazwa użytkownika jest już zajęta.');\n        return;\n      }\n\n      const registerResponse = await http.post('/register', values);\n      navigate('/login');\n    } catch (error) {\n      if (error.response && error.response.data && error.response.data.email) {\n        setError(error.response.data.email[0]);\n      } else {\n        setError('Wystąpił błąd rejestracji.');\n      }\n    } finally {\n      setSubmitting(false);\n    }\n  };\n\n  return (\n    <div className=\"row justify-content-center pt-5\">\n      <div className=\"col-sm-6\">\n        <div className=\"card p-4\">\n          <h1 className=\"text-center mb-3\">Zarejestruj się</h1>\n          {error && <div className=\"alert alert-danger\">{error}</div>}\n          <Formik\n            initialValues={{\n              name: '',\n              email: '',\n              password: '',\n            }}\n            validationSchema={validationSchema}\n            onSubmit={handleSubmit}\n          >\n            <Form>\n              <div className=\"form-group\">\n                <label htmlFor=\"name\">Nazwa użytkownika:</label>\n                <Field\n                  type=\"text\"\n                  className=\"form-control\"\n                  placeholder=\"Podaj nazwę użytkownika\"\n                  name=\"name\"\n                />\n                <ErrorMessage name=\"name\" component=\"div\" className=\"text-danger\" />\n              </div>\n              <div className=\"form-group mt-3\">\n                <label htmlFor=\"email\">Adres email:</label>\n                <Field\n                  type=\"email\"\n                  className=\"form-control\"\n                  placeholder=\"Podaj email\"\n                  name=\"email\"\n                />\n                <ErrorMessage name=\"email\" component=\"div\" className=\"text-danger\" />\n              </div>\n\n              <div className=\"form-group mt-3\">\n                <label htmlFor=\"password\">Hasło:</label>\n                <Field\n                  type=\"password\"\n                  className=\"form-control\"\n                  placeholder=\"Podaj hasło\"\n                  name=\"password\"\n                />\n                <ErrorMessage name=\"password\" component=\"div\" className=\"text-danger\" />\n              </div>\n              <button type=\"submit\" className=\"btn btn-primary mt-4\">\n                Zarejestruj się\n              </button>\n            </Form>\n          </Formik>\n        </div>\n      </div>\n    </div>\n  );\n}"]},"metadata":{},"sourceType":"module"}